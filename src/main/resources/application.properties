spring.application.name=backend

# Database Configuration
spring.datasource.url=${DATABASE_URL}
spring.datasource.driverClassName=org.postgresql.Driver

# HikariCP Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=${DB_POOL_SIZE}
spring.datasource.hikari.minimum-idle=${DB_MIN_IDLE}
spring.datasource.hikari.connection-timeout=${DB_CONNECTION_TIMEOUT}
spring.datasource.hikari.validation-timeout=${DB_VALIDATION_TIMEOUT}
spring.datasource.hikari.idle-timeout=${DB_IDLE_TIMEOUT}
spring.datasource.hikari.max-lifetime=${DB_MAX_LIFETIME}
spring.datasource.hikari.leak-detection-threshold=${DB_LEAK_DETECTION}

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO}
spring.jpa.show-sql=${JPA_SHOW_SQL}
spring.jpa.properties.hibernate.format_sql=${JPA_FORMAT_SQL}
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jackson.serialization.fail-on-empty-beans=false

# Logging Configuration
logging.level.org.hibernate.SQL=${HIBERNATE_SQL_LOG_LEVEL}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${HIBERNATE_BINDER_LOG_LEVEL}

# Email Configuration
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.protocol=${MAIL_PROTOCOL}
spring.mail.properties.mail.smtp.auth=${MAIL_SMTP_AUTH}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_SMTP_STARTTLS}
spring.mail.properties.mail.smtp.starttls.required=${MAIL_SMTP_STARTTLS_REQUIRED}

# MinIO Configuration
minio.url=${MINIO_URL}
minio.access.key=${MINIO_ACCESS_KEY}
minio.secret.key=${MINIO_SECRET_KEY}

# Redis Configuration
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}
spring.data.redis.database=${REDIS_DATABASE}
spring.data.redis.password=${REDIS_PASSWORD}
spring.data.redis.timeout=${REDIS_TIMEOUT}
spring.data.redis.lettuce.shutdown-timeout=${REDIS_SHUTDOWN_TIMEOUT}
spring.data.redis.lettuce.pool.max-active=${REDIS_POOL_MAX_ACTIVE}
spring.data.redis.lettuce.pool.max-idle=${REDIS_POOL_MAX_IDLE}
spring.data.redis.lettuce.pool.min-idle=${REDIS_POOL_MIN_IDLE}
spring.data.redis.lettuce.pool.max-wait=${REDIS_POOL_MAX_WAIT}

logging.level.org.springframework.security=${SECURITY_LOG_LEVEL}
logging.level.com.lapxpert.backend.shipping.config.GHNConfig=DEBUG

# File Upload Configuration
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB
spring.servlet.multipart.enabled=true

spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.xml

# VNPay Configuration
vnpay.tmn-code=${VNPAY_TMN_CODE}
vnpay.hash-secret=${VNPAY_HASH_SECRET}
vnpay.pay-url=${VNPAY_PAY_URL}
vnpay.api-url=${VNPAY_API_URL}
vnpay.return-url=${VNPAY_RETURN_URL}

# MoMo SDK Configuration
momo.sdk.enabled=${MOMO_SDK_ENABLED}
momo.sdk.environment=${MOMO_SDK_ENVIRONMENT}
DEV_MOMO_ENDPOINT=${DEV_MOMO_ENDPOINT}
DEV_ACCESS_KEY=${DEV_ACCESS_KEY}
DEV_PARTNER_CODE=${DEV_PARTNER_CODE}
DEV_SECRET_KEY=${DEV_SECRET_KEY}
PROD_MOMO_ENDPOINT=${PROD_MOMO_ENDPOINT}
PROD_ACCESS_KEY=${PROD_ACCESS_KEY}
PROD_PARTNER_CODE=${PROD_PARTNER_CODE}
PROD_SECRET_KEY=${PROD_SECRET_KEY}

## AIOv2
CREATE_URL=/create
QUERY_URL=/query
REFUND_URL=/refund
CONFIRM_URL=/confirm
TOKEN_PAY_URL=/tokenization/pay
TOKEN_BIND_URL=/tokenization/bind
TOKEN_INQUIRY_URL=/tokenization/cbQuery
TOKEN_DELETE_URL=/tokenization/delete

# Default Admin User Configuration
app.default-admin.enabled=${DEFAULT_ADMIN_ENABLED}
app.default-admin.email=${DEFAULT_ADMIN_EMAIL}
app.default-admin.password=${DEFAULT_ADMIN_PASSWORD}
app.default-admin.name=${DEFAULT_ADMIN_NAME}
app.default-admin.phone=${DEFAULT_ADMIN_PHONE}

# JWT Configuration
jwt.secret=${JWT_SECRET}
jwt.expiration-hours=${JWT_EXPIRATION_HOURS}

# GHN (GiaoHangNhanh) Shipping Configuration
ghn.api-token=${GHN_API_TOKEN}
ghn.base-url=${GHN_BASE_URL}
ghn.shop-id=${GHN_SHOP_ID}
ghn.default-service-id=${GHN_DEFAULT_SERVICE_ID}
ghn.default-service-type-id=${GHN_DEFAULT_SERVICE_TYPE_ID}
ghn.default-from-district-id=${GHN_DEFAULT_FROM_DISTRICT_ID}
ghn.default-from-ward-code=${GHN_DEFAULT_FROM_WARD_CODE}
ghn.default-from-address=Ph??ng Xuân La, Qu?n Tây H?, Thành ph? Hà N?i

# WebSocket Configuration
websocket.enhanced.enabled=${WEBSOCKET_ENHANCED_ENABLED}
websocket.enhanced.task-scheduler.pool-size=${WEBSOCKET_TASK_SCHEDULER_POOL_SIZE}
websocket.enhanced.connection-tracking.enabled=${WEBSOCKET_CONNECTION_TRACKING_ENABLED}
websocket.redis.pubsub.enabled=${WEBSOCKET_REDIS_PUBSUB_ENABLED}
websocket.redis.pubsub.ordering.enabled=${WEBSOCKET_REDIS_PUBSUB_ORDERING_ENABLED}
websocket.redis.pubsub.deduplication.enabled=${WEBSOCKET_REDIS_PUBSUB_DEDUPLICATION_ENABLED}
websocket.redis.pubsub.deduplication.ttl=${WEBSOCKET_REDIS_PUBSUB_DEDUPLICATION_TTL}
websocket.redis.pubsub.delivery.confirmation.enabled=${WEBSOCKET_REDIS_PUBSUB_DELIVERY_CONFIRMATION_ENABLED}
websocket.integration.enabled=${WEBSOCKET_INTEGRATION_ENABLED}

# Jackson Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.serialization.write-dates-with-zone-id=true
spring.jackson.deserialization.fail-on-unknown-properties=false

# Spring Boot Actuator Configuration
management.endpoints.web.exposure.include=${ACTUATOR_ENDPOINTS}
management.endpoint.health.show-details=${ACTUATOR_HEALTH_DETAILS}
management.endpoint.metrics.enabled=${ACTUATOR_METRICS_ENABLED}